// Code generated by goctl. DO NOT EDIT!
// Source: users.proto

package server

import (
	"context"

	"go-template/rpc/internal/logic"
	"go-template/rpc/internal/svc"
	"go-template/rpc/userspb"
)

type UsersServiceServer struct {
	svcCtx *svc.ServiceContext
	userspb.UnimplementedUsersServiceServer
}

func NewUsersServiceServer(svcCtx *svc.ServiceContext) *UsersServiceServer {
	return &UsersServiceServer{
		svcCtx: svcCtx,
	}
}

//  UpsertCustomer
func (s *UsersServiceServer) UpsertCustomer(ctx context.Context, in *userspb.UpsertCustomerReq) (*userspb.UpsertCustomerResp, error) {
	l := logic.NewUpsertCustomerLogic(ctx, s.svcCtx)
	return l.UpsertCustomer(in)
}

//  新增Customer
func (s *UsersServiceServer) AddCustomer(ctx context.Context, in *userspb.AddCustomerReq) (*userspb.AddCustomerResp, error) {
	l := logic.NewAddCustomerLogic(ctx, s.svcCtx)
	return l.AddCustomer(in)
}

//  删除Customer
func (s *UsersServiceServer) DeleteCustomer(ctx context.Context, in *userspb.DeleteCustomerReq) (*userspb.DeleteCustomerResp, error) {
	l := logic.NewDeleteCustomerLogic(ctx, s.svcCtx)
	return l.DeleteCustomer(in)
}

//  修改Customer
func (s *UsersServiceServer) ChangeCustomer(ctx context.Context, in *userspb.ChangeCustomerReq) (*userspb.ChangeCustomerResp, error) {
	l := logic.NewChangeCustomerLogic(ctx, s.svcCtx)
	return l.ChangeCustomer(in)
}

//  查询Customer
func (s *UsersServiceServer) GetCustomer(ctx context.Context, in *userspb.GetCustomerReq) (*userspb.GetCustomerResp, error) {
	l := logic.NewGetCustomerLogic(ctx, s.svcCtx)
	return l.GetCustomer(in)
}

//  Customer列表
func (s *UsersServiceServer) ListCustomers(ctx context.Context, in *userspb.ListCustomersReq) (*userspb.ListCustomersResp, error) {
	l := logic.NewListCustomersLogic(ctx, s.svcCtx)
	return l.ListCustomers(in)
}
