// source: hello/v1/hello.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.hello.v1.SayHelloRequest', null, global);
goog.exportSymbol('proto.hello.v1.SayHelloRequest.NestMessage', null, global);
goog.exportSymbol('proto.hello.v1.SayHelloRequest.ResultCase', null, global);
goog.exportSymbol('proto.hello.v1.SayHelloRequest.Status', null, global);
goog.exportSymbol('proto.hello.v1.SayHelloResponse', null, global);
goog.exportSymbol('proto.hello.v1.SayHelloResponse.Data', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hello.v1.SayHelloRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.hello.v1.SayHelloRequest.repeatedFields_, proto.hello.v1.SayHelloRequest.oneofGroups_);
};
goog.inherits(proto.hello.v1.SayHelloRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hello.v1.SayHelloRequest.displayName = 'proto.hello.v1.SayHelloRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hello.v1.SayHelloRequest.NestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hello.v1.SayHelloRequest.NestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hello.v1.SayHelloRequest.NestMessage.displayName = 'proto.hello.v1.SayHelloRequest.NestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hello.v1.SayHelloResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hello.v1.SayHelloResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hello.v1.SayHelloResponse.displayName = 'proto.hello.v1.SayHelloResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.hello.v1.SayHelloResponse.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.hello.v1.SayHelloResponse.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.hello.v1.SayHelloResponse.Data.displayName = 'proto.hello.v1.SayHelloResponse.Data';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.hello.v1.SayHelloRequest.repeatedFields_ = [3];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.hello.v1.SayHelloRequest.oneofGroups_ = [[12,13,14]];

/**
 * @enum {number}
 */
proto.hello.v1.SayHelloRequest.ResultCase = {
  RESULT_NOT_SET: 0,
  RESULT_A: 12,
  RESULT_B: 13,
  RESULT_C: 14
};

/**
 * @return {proto.hello.v1.SayHelloRequest.ResultCase}
 */
proto.hello.v1.SayHelloRequest.prototype.getResultCase = function() {
  return /** @type {proto.hello.v1.SayHelloRequest.ResultCase} */(jspb.Message.computeOneofCase(this, proto.hello.v1.SayHelloRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hello.v1.SayHelloRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.hello.v1.SayHelloRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hello.v1.SayHelloRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    age: jspb.Message.getFieldWithDefault(msg, 1, 0),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scoreList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    money: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fat: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    pb_char: msg.getChar_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    nestMessage: (f = msg.getNestMessage()) && proto.hello.v1.SayHelloRequest.NestMessage.toObject(includeInstance, f),
    mapFieldMap: (f = msg.getMapFieldMap()) ? f.toObject(includeInstance, undefined) : [],
    resultA: jspb.Message.getFieldWithDefault(msg, 12, ""),
    resultB: jspb.Message.getFieldWithDefault(msg, 13, 0),
    resultC: (f = msg.getResultC()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hello.v1.SayHelloRequest}
 */
proto.hello.v1.SayHelloRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hello.v1.SayHelloRequest;
  return proto.hello.v1.SayHelloRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hello.v1.SayHelloRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hello.v1.SayHelloRequest}
 */
proto.hello.v1.SayHelloRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAge(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addScore(values[i]);
      }
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMoney(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFat(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChar(value);
      break;
    case 8:
      var value = /** @type {!proto.hello.v1.SayHelloRequest.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = new proto.hello.v1.SayHelloRequest.NestMessage;
      reader.readMessage(value,proto.hello.v1.SayHelloRequest.NestMessage.deserializeBinaryFromReader);
      msg.setNestMessage(value);
      break;
    case 10:
      var value = msg.getMapFieldMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setResultA(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultB(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setResultC(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hello.v1.SayHelloRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hello.v1.SayHelloRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hello.v1.SayHelloRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAge();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getScoreList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFat();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getChar_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getNestMessage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.hello.v1.SayHelloRequest.NestMessage.serializeBinaryToWriter
    );
  }
  f = message.getMapFieldMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getResultC();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.hello.v1.SayHelloRequest.Status = {
  STATUS_OK_UNSPECIFIED: 0,
  STATUS_FAIL: 1
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hello.v1.SayHelloRequest.NestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.hello.v1.SayHelloRequest.NestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hello.v1.SayHelloRequest.NestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloRequest.NestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    isNest: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hello.v1.SayHelloRequest.NestMessage}
 */
proto.hello.v1.SayHelloRequest.NestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hello.v1.SayHelloRequest.NestMessage;
  return proto.hello.v1.SayHelloRequest.NestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hello.v1.SayHelloRequest.NestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hello.v1.SayHelloRequest.NestMessage}
 */
proto.hello.v1.SayHelloRequest.NestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hello.v1.SayHelloRequest.NestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hello.v1.SayHelloRequest.NestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hello.v1.SayHelloRequest.NestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloRequest.NestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsNest();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_nest = 1;
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.NestMessage.prototype.getIsNest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.hello.v1.SayHelloRequest.NestMessage} returns this
 */
proto.hello.v1.SayHelloRequest.NestMessage.prototype.setIsNest = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 age = 1;
 * @return {number}
 */
proto.hello.v1.SayHelloRequest.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setAge = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.hello.v1.SayHelloRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setCount = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearCount = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.hasCount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated float score = 3;
 * @return {!Array<number>}
 */
proto.hello.v1.SayHelloRequest.prototype.getScoreList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setScoreList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.addScore = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearScoreList = function() {
  return this.setScoreList([]);
};


/**
 * optional double money = 4;
 * @return {number}
 */
proto.hello.v1.SayHelloRequest.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setMoney = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.hello.v1.SayHelloRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool fat = 6;
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.getFat = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setFat = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bytes char = 7;
 * @return {!(string|Uint8Array)}
 */
proto.hello.v1.SayHelloRequest.prototype.getChar = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes char = 7;
 * This is a type-conversion wrapper around `getChar()`
 * @return {string}
 */
proto.hello.v1.SayHelloRequest.prototype.getChar_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChar()));
};


/**
 * optional bytes char = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChar()`
 * @return {!Uint8Array}
 */
proto.hello.v1.SayHelloRequest.prototype.getChar_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChar()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setChar = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional Status status = 8;
 * @return {!proto.hello.v1.SayHelloRequest.Status}
 */
proto.hello.v1.SayHelloRequest.prototype.getStatus = function() {
  return /** @type {!proto.hello.v1.SayHelloRequest.Status} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.hello.v1.SayHelloRequest.Status} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional NestMessage nest_message = 9;
 * @return {?proto.hello.v1.SayHelloRequest.NestMessage}
 */
proto.hello.v1.SayHelloRequest.prototype.getNestMessage = function() {
  return /** @type{?proto.hello.v1.SayHelloRequest.NestMessage} */ (
    jspb.Message.getWrapperField(this, proto.hello.v1.SayHelloRequest.NestMessage, 9));
};


/**
 * @param {?proto.hello.v1.SayHelloRequest.NestMessage|undefined} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
*/
proto.hello.v1.SayHelloRequest.prototype.setNestMessage = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearNestMessage = function() {
  return this.setNestMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.hasNestMessage = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, int32> map_field = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.hello.v1.SayHelloRequest.prototype.getMapFieldMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearMapFieldMap = function() {
  this.getMapFieldMap().clear();
  return this;};


/**
 * optional string result_a = 12;
 * @return {string}
 */
proto.hello.v1.SayHelloRequest.prototype.getResultA = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setResultA = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.hello.v1.SayHelloRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearResultA = function() {
  return jspb.Message.setOneofField(this, 12, proto.hello.v1.SayHelloRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.hasResultA = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 result_b = 13;
 * @return {number}
 */
proto.hello.v1.SayHelloRequest.prototype.getResultB = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.setResultB = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.hello.v1.SayHelloRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearResultB = function() {
  return jspb.Message.setOneofField(this, 13, proto.hello.v1.SayHelloRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.hasResultB = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Timestamp result_c = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.hello.v1.SayHelloRequest.prototype.getResultC = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.hello.v1.SayHelloRequest} returns this
*/
proto.hello.v1.SayHelloRequest.prototype.setResultC = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.hello.v1.SayHelloRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hello.v1.SayHelloRequest} returns this
 */
proto.hello.v1.SayHelloRequest.prototype.clearResultC = function() {
  return this.setResultC(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloRequest.prototype.hasResultC = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hello.v1.SayHelloResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.hello.v1.SayHelloResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hello.v1.SayHelloResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && proto.hello.v1.SayHelloResponse.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hello.v1.SayHelloResponse}
 */
proto.hello.v1.SayHelloResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hello.v1.SayHelloResponse;
  return proto.hello.v1.SayHelloResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hello.v1.SayHelloResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hello.v1.SayHelloResponse}
 */
proto.hello.v1.SayHelloResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = new proto.hello.v1.SayHelloResponse.Data;
      reader.readMessage(value,proto.hello.v1.SayHelloResponse.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hello.v1.SayHelloResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hello.v1.SayHelloResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hello.v1.SayHelloResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.hello.v1.SayHelloResponse.Data.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.hello.v1.SayHelloResponse.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.hello.v1.SayHelloResponse.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.hello.v1.SayHelloResponse.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloResponse.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    age: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    money: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.hello.v1.SayHelloResponse.Data}
 */
proto.hello.v1.SayHelloResponse.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.hello.v1.SayHelloResponse.Data;
  return proto.hello.v1.SayHelloResponse.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.hello.v1.SayHelloResponse.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.hello.v1.SayHelloResponse.Data}
 */
proto.hello.v1.SayHelloResponse.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAge(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMoney(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.hello.v1.SayHelloResponse.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.hello.v1.SayHelloResponse.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.hello.v1.SayHelloResponse.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.hello.v1.SayHelloResponse.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAge();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMoney();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional int32 age = 1;
 * @return {number}
 */
proto.hello.v1.SayHelloResponse.Data.prototype.getAge = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloResponse.Data} returns this
 */
proto.hello.v1.SayHelloResponse.Data.prototype.setAge = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.hello.v1.SayHelloResponse.Data.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.hello.v1.SayHelloResponse.Data} returns this
 */
proto.hello.v1.SayHelloResponse.Data.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double money = 3;
 * @return {number}
 */
proto.hello.v1.SayHelloResponse.Data.prototype.getMoney = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.hello.v1.SayHelloResponse.Data} returns this
 */
proto.hello.v1.SayHelloResponse.Data.prototype.setMoney = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.hello.v1.SayHelloResponse.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.hello.v1.SayHelloResponse} returns this
 */
proto.hello.v1.SayHelloResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Data data = 2;
 * @return {?proto.hello.v1.SayHelloResponse.Data}
 */
proto.hello.v1.SayHelloResponse.prototype.getData = function() {
  return /** @type{?proto.hello.v1.SayHelloResponse.Data} */ (
    jspb.Message.getWrapperField(this, proto.hello.v1.SayHelloResponse.Data, 2));
};


/**
 * @param {?proto.hello.v1.SayHelloResponse.Data|undefined} value
 * @return {!proto.hello.v1.SayHelloResponse} returns this
*/
proto.hello.v1.SayHelloResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.hello.v1.SayHelloResponse} returns this
 */
proto.hello.v1.SayHelloResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.hello.v1.SayHelloResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.hello.v1);
